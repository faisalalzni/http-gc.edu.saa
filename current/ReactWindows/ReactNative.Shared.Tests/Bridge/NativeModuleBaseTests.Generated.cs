//
// Generated by NativeModuleBaseTests.tt
//
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
//

using Newtonsoft.Json.Linq;
using NUnit.Framework;
using ReactNative.Bridge;
using System.Linq;

namespace ReactNative.Tests.Bridge
{
    public partial class NativeModuleBaseTests
    {
        [Test]
        public void NativeModuleBase_ReactMethod_ArgumentCountChecks()
        {
            var module = new ArgumentCountTestNativeModule();
            var nopCallback = new InvokeCallback((_, __) => { });
            var args = Enumerable.Range(0, 17);

            module.Methods[nameof(ArgumentCountTestNativeModule.test0)].Invoke(nopCallback, JArray.FromObject(args.Take(0).ToArray()));
            Assert.AreEqual(1, module.test0Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test1)].Invoke(nopCallback, JArray.FromObject(args.Take(1).ToArray()));
            Assert.AreEqual(1, module.test1Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test2)].Invoke(nopCallback, JArray.FromObject(args.Take(2).ToArray()));
            Assert.AreEqual(1, module.test2Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test3)].Invoke(nopCallback, JArray.FromObject(args.Take(3).ToArray()));
            Assert.AreEqual(1, module.test3Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test4)].Invoke(nopCallback, JArray.FromObject(args.Take(4).ToArray()));
            Assert.AreEqual(1, module.test4Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test5)].Invoke(nopCallback, JArray.FromObject(args.Take(5).ToArray()));
            Assert.AreEqual(1, module.test5Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test6)].Invoke(nopCallback, JArray.FromObject(args.Take(6).ToArray()));
            Assert.AreEqual(1, module.test6Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test7)].Invoke(nopCallback, JArray.FromObject(args.Take(7).ToArray()));
            Assert.AreEqual(1, module.test7Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test8)].Invoke(nopCallback, JArray.FromObject(args.Take(8).ToArray()));
            Assert.AreEqual(1, module.test8Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test9)].Invoke(nopCallback, JArray.FromObject(args.Take(9).ToArray()));
            Assert.AreEqual(1, module.test9Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test10)].Invoke(nopCallback, JArray.FromObject(args.Take(10).ToArray()));
            Assert.AreEqual(1, module.test10Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test11)].Invoke(nopCallback, JArray.FromObject(args.Take(11).ToArray()));
            Assert.AreEqual(1, module.test11Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test12)].Invoke(nopCallback, JArray.FromObject(args.Take(12).ToArray()));
            Assert.AreEqual(1, module.test12Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test13)].Invoke(nopCallback, JArray.FromObject(args.Take(13).ToArray()));
            Assert.AreEqual(1, module.test13Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test14)].Invoke(nopCallback, JArray.FromObject(args.Take(14).ToArray()));
            Assert.AreEqual(1, module.test14Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test15)].Invoke(nopCallback, JArray.FromObject(args.Take(15).ToArray()));
            Assert.AreEqual(1, module.test15Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test16)].Invoke(nopCallback, JArray.FromObject(args.Take(16).ToArray()));
            Assert.AreEqual(1, module.test16Calls);

            module.Methods[nameof(ArgumentCountTestNativeModule.test17)].Invoke(nopCallback, JArray.FromObject(args.Take(17).ToArray()));
            Assert.AreEqual(1, module.test17Calls);

        }

        class ArgumentCountTestNativeModule : NativeModuleBase
        {
            public override string Name => "Test";

            public int test0Calls;

            [ReactMethod]
            public void test0()
            {
                test0Calls++;

            }

            public int test1Calls;

            [ReactMethod]
            public void test1(int arg0)
            {
                test1Calls++;
                Assert.AreEqual(0, arg0);

            }

            public int test2Calls;

            [ReactMethod]
            public void test2(int arg0, int arg1)
            {
                test2Calls++;
                Assert.AreEqual(0, arg0);
                Assert.AreEqual(1, arg1);

            }

            public int test3Calls;

            [ReactMethod]
            public void test3(int arg0, int arg1, int arg2)
            {
                test3Calls++;
                Assert.AreEqual(0, arg0);
                Assert.AreEqual(1, arg1);
                Assert.AreEqual(2, arg2);

            }

            public int test4Calls;

            [ReactMethod]
            public void test4(int arg0, int arg1, int arg2, int arg3)
            {
                test4Calls++;
                Assert.AreEqual(0, arg0);
                Assert.AreEqual(1, arg1);
                Assert.AreEqual(2, arg2);
                Assert.AreEqual(3, arg3);

            }

            public int test5Calls;

            [ReactMethod]
            public void test5(int arg0, int arg1, int arg2, int arg3, int arg4)
            {
                test5Calls++;
                Assert.AreEqual(0, arg0);
                Assert.AreEqual(1, arg1);
                Assert.AreEqual(2, arg2);
                Assert.AreEqual(3, arg3);
                Assert.AreEqual(4, arg4);

            }

            public int test6Calls;

            [ReactMethod]
            public void test6(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5)
            {
                test6Calls++;
                Assert.AreEqual(0, arg0);
                Assert.AreEqual(1, arg1);
                Assert.AreEqual(2, arg2);
                Assert.AreEqual(3, arg3);
                Assert.AreEqual(4, arg4);
                Assert.AreEqual(5, arg5);

            }

            public int test7Calls;

            [ReactMethod]
            public void test7(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6)
            {
                test7Calls++;
                Assert.AreEqual(0, arg0);
                Assert.AreEqual(1, arg1);
                Assert.AreEqual(2, arg2);
                Assert.AreEqual(3, arg3);
                Assert.AreEqual(4, arg4);
                Assert.AreEqual(5, arg5);
                Assert.AreEqual(6, arg6);

            }

            public int test8Calls;

            [ReactMethod]
            public void test8(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7)
            {
                test8Calls++;
                Assert.AreEqual(0, arg0);
                Assert.AreEqual(1, arg1);
                Assert.AreEqual(2, arg2);
                Assert.AreEqual(3, arg3);
                Assert.AreEqual(4, arg4);
                Assert.AreEqual(5, arg5);
                Assert.AreEqual(6, arg6);
                Assert.AreEqual(7, arg7);

            }

            public int test9Calls;

            [ReactMethod]
            public void test9(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8)
            {
                test9Calls++;
                Assert.AreEqual(0, arg0);
                Assert.AreEqual(1, arg1);
                Assert.AreEqual(2, arg2);
                Assert.AreEqual(3, arg3);
                Assert.AreEqual(4, arg4);
                Assert.AreEqual(5, arg5);
                Assert.AreEqual(6, arg6);
                Assert.AreEqual(7, arg7);
                Assert.AreEqual(8, arg8);

            }

            public int test10Calls;

            [ReactMethod]
            public void test10(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9)
            {
                test10Calls++;
                Assert.AreEqual(0, arg0);
                Assert.AreEqual(1, arg1);
                Assert.AreEqual(2, arg2);
                Assert.AreEqual(3, arg3);
                Assert.AreEqual(4, arg4);
                Assert.AreEqual(5, arg5);
                Assert.AreEqual(6, arg6);
                Assert.AreEqual(7, arg7);
                Assert.AreEqual(8, arg8);
                Assert.AreEqual(9, arg9);

            }

            public int test11Calls;

            [ReactMethod]
            public void test11(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10)
            {
                test11Calls++;
                Assert.AreEqual(0, arg0);
                Assert.AreEqual(1, arg1);
                Assert.AreEqual(2, arg2);
                Assert.AreEqual(3, arg3);
                Assert.AreEqual(4, arg4);
                Assert.AreEqual(5, arg5);
                Assert.AreEqual(6, arg6);
                Assert.AreEqual(7, arg7);
                Assert.AreEqual(8, arg8);
                Assert.AreEqual(9, arg9);
                Assert.AreEqual(10, arg10);

            }

            public int test12Calls;

            [ReactMethod]
            public void test12(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11)
            {
                test12Calls++;
                Assert.AreEqual(0, arg0);
                Assert.AreEqual(1, arg1);
                Assert.AreEqual(2, arg2);
                Assert.AreEqual(3, arg3);
                Assert.AreEqual(4, arg4);
                Assert.AreEqual(5, arg5);
                Assert.AreEqual(6, arg6);
                Assert.AreEqual(7, arg7);
                Assert.AreEqual(8, arg8);
                Assert.AreEqual(9, arg9);
                Assert.AreEqual(10, arg10);
                Assert.AreEqual(11, arg11);

            }

            public int test13Calls;

            [ReactMethod]
            public void test13(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11, int arg12)
            {
                test13Calls++;
                Assert.AreEqual(0, arg0);
                Assert.AreEqual(1, arg1);
                Assert.AreEqual(2, arg2);
                Assert.AreEqual(3, arg3);
                Assert.AreEqual(4, arg4);
                Assert.AreEqual(5, arg5);
                Assert.AreEqual(6, arg6);
                Assert.AreEqual(7, arg7);
                Assert.AreEqual(8, arg8);
                Assert.AreEqual(9, arg9);
                Assert.AreEqual(10, arg10);
                Assert.AreEqual(11, arg11);
                Assert.AreEqual(12, arg12);

            }

            public int test14Calls;

            [ReactMethod]
            public void test14(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11, int arg12, int arg13)
            {
                test14Calls++;
                Assert.AreEqual(0, arg0);
                Assert.AreEqual(1, arg1);
                Assert.AreEqual(2, arg2);
                Assert.AreEqual(3, arg3);
                Assert.AreEqual(4, arg4);
                Assert.AreEqual(5, arg5);
                Assert.AreEqual(6, arg6);
                Assert.AreEqual(7, arg7);
                Assert.AreEqual(8, arg8);
                Assert.AreEqual(9, arg9);
                Assert.AreEqual(10, arg10);
                Assert.AreEqual(11, arg11);
                Assert.AreEqual(12, arg12);
                Assert.AreEqual(13, arg13);

            }

            public int test15Calls;

            [ReactMethod]
            public void test15(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11, int arg12, int arg13, int arg14)
            {
                test15Calls++;
                Assert.AreEqual(0, arg0);
                Assert.AreEqual(1, arg1);
                Assert.AreEqual(2, arg2);
                Assert.AreEqual(3, arg3);
                Assert.AreEqual(4, arg4);
                Assert.AreEqual(5, arg5);
                Assert.AreEqual(6, arg6);
                Assert.AreEqual(7, arg7);
                Assert.AreEqual(8, arg8);
                Assert.AreEqual(9, arg9);
                Assert.AreEqual(10, arg10);
                Assert.AreEqual(11, arg11);
                Assert.AreEqual(12, arg12);
                Assert.AreEqual(13, arg13);
                Assert.AreEqual(14, arg14);

            }

            public int test16Calls;

            [ReactMethod]
            public void test16(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11, int arg12, int arg13, int arg14, int arg15)
            {
                test16Calls++;
                Assert.AreEqual(0, arg0);
                Assert.AreEqual(1, arg1);
                Assert.AreEqual(2, arg2);
                Assert.AreEqual(3, arg3);
                Assert.AreEqual(4, arg4);
                Assert.AreEqual(5, arg5);
                Assert.AreEqual(6, arg6);
                Assert.AreEqual(7, arg7);
                Assert.AreEqual(8, arg8);
                Assert.AreEqual(9, arg9);
                Assert.AreEqual(10, arg10);
                Assert.AreEqual(11, arg11);
                Assert.AreEqual(12, arg12);
                Assert.AreEqual(13, arg13);
                Assert.AreEqual(14, arg14);
                Assert.AreEqual(15, arg15);

            }

            public int test17Calls;

            [ReactMethod]
            public void test17(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11, int arg12, int arg13, int arg14, int arg15, int arg16)
            {
                test17Calls++;
                Assert.AreEqual(0, arg0);
                Assert.AreEqual(1, arg1);
                Assert.AreEqual(2, arg2);
                Assert.AreEqual(3, arg3);
                Assert.AreEqual(4, arg4);
                Assert.AreEqual(5, arg5);
                Assert.AreEqual(6, arg6);
                Assert.AreEqual(7, arg7);
                Assert.AreEqual(8, arg8);
                Assert.AreEqual(9, arg9);
                Assert.AreEqual(10, arg10);
                Assert.AreEqual(11, arg11);
                Assert.AreEqual(12, arg12);
                Assert.AreEqual(13, arg13);
                Assert.AreEqual(14, arg14);
                Assert.AreEqual(15, arg15);
                Assert.AreEqual(16, arg16);

            }

        }
    }
}
