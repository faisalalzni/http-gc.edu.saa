//
// Generated by NativeModuleBaseTests.tt
//
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
//
<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".Generated.cs" #>
<# const int maxArity = 16; #>
using Newtonsoft.Json.Linq;
using NUnit.Framework;
using ReactNative.Bridge;
using System.Linq;

namespace ReactNative.Tests.Bridge
{
    public partial class NativeModuleBaseTests
    {
        [Test]
        public void NativeModuleBase_ReactMethod_ArgumentCountChecks()
        {
            var module = new ArgumentCountTestNativeModule();
            var reactInstance = new MockReactInstance();
            var args = Enumerable.Repeat(42, <#=maxArity + 1#>);
<#
for (var i = 0; i <= maxArity + 1; ++i)
{
    var argsString = string.Join(", ", Enumerable.Range(0, i).Select(x => "int arg" + x));
#>
            module.Methods[nameof(ArgumentCountTestNativeModule.test<#=i#>)].Invoke(reactInstance, JArray.FromObject(args.Take(<#=i#>).ToArray()));
            Assert.AreEqual(1, module.test<#=i#>Calls);
<#
}
#>
        }

        class ArgumentCountTestNativeModule : NativeModuleBase
        {
            public override string Name => "Test";
<#
for (var i = 0; i <= maxArity + 1; ++i)
{
    var argsString = string.Join(", ", Enumerable.Range(0, i).Select(x => "int arg" + x));
#>
            public int test<#=i#>Calls;

            [ReactMethod]
            public void test<#=i#>(<#=argsString#>)
            {
                test<#=i#>Calls++;
<#
for (var j = 0; j < i; ++j)
{
#>                Assert.AreEqual(<#=j#>, <#="arg" + j#>);
<#
}
#>
            }
<#
}
#>
        }
    }
}
