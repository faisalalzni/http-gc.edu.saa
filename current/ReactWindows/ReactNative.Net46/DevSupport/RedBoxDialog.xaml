<Window
    x:ClassModifier="internal"
    x:Class="ReactNative.DevSupport.RedBoxDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ReactNative.DevSupport"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Style="{DynamicResource ContentDialogStyle}"
    WindowStartupLocation="CenterOwner"
    mc:Ignorable="d" d:DesignHeight="756" d:DesignWidth="548">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!--
            *****************************************************************
            Colors
            *****************************************************************
            -->
            <SolidColorBrush x:Key="BackgroundBrush" Color="#E80000"/>
            <SolidColorBrush x:Key="ForegroundBrush" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="BorderBrush" Color="Black"/>

            <!--
            *****************************************************************
            Templates
            *****************************************************************
            -->
            <DataTemplate x:Key="StackFrameTemplate" DataType="devSupport:IStackFrame">
                <Border Padding="5,5,5,5">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        
                        <TextBlock Grid.Row="0" 
                                   FontFamily="Monospace"
                                   FontSize="12"
                                   Foreground="{StaticResource ForegroundBrush}"
                                   Text="{Binding Path=Method, Mode=OneTime}"/>
                        
                        <TextBlock Grid.Row="1" 
                                   FontSize="10"
                                   Foreground="LightGray"
                                   TextWrapping="Wrap"
                                   Text="{Binding Path=SourceInfo, Mode=OneTime}"/>
                    </Grid>
                </Border>
            </DataTemplate>

        </ResourceDictionary>
    </Window.Resources>    
 
    <Border x:Name="BackgroundElement" Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" Padding="10,10,10,10">
        <Grid x:Name="LayoutRoot" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="15"/>
                <RowDefinition Height="*" />
                <RowDefinition Height="15"/>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" 
                        FontFamily="Monospace"
                        FontSize="14"
                        FontWeight="SemiBold"
                        Foreground="{StaticResource ForegroundBrush}"
                        Text="{Binding Path=Message, Mode=OneWay}"
                        TextWrapping="Wrap" />

            <ScrollViewer Grid.Row="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"  ScrollViewer.CanContentScroll="True">
                <ListView Background="Transparent" 
                          BorderThickness="0,0,0,0"
                          ItemsSource="{Binding Path=StackTrace, Mode=OneWay}" 
                          ItemTemplate="{StaticResource StackFrameTemplate}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="BorderBrush" Value="LightGray" />
                            <Setter Property="BorderThickness" Value="0 0.5 0 0" />
                            <Setter Property="Focusable" Value="False" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#33000000" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                    </ListView.ItemContainerStyle>
                </ListView>
            </ScrollViewer>
            
            <Grid x:Name="CommandSpace" Grid.Row="4" HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
                <Button Style="{StaticResource ContentDialogButtonStyle}" HorizontalAlignment="Left" Content="Close" IsCancel="True" Click="OnCloseButtonClicked"/>
                <Button Style="{StaticResource ContentDialogButtonStyle}" HorizontalAlignment="Right" Content="Reload JavaScript" IsDefault="True" Click="OnReloadButtonClicked"/>
            </Grid>
        </Grid>
    </Border>
</Window>
